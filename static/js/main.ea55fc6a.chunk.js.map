{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["PokeCheckBox","checkbox","checked","this","props","value","type","className","disabled","React","Component","PokeID","id","PokeIcon","name","src","alt","toLowerCase","PokeTypes","types","Array","from","map","PokeSelect","data","select","class","PokeDynamax","level","gigantamax","colourmap","elements","i","style","display","width","height","marginRight","backgroundColor","push","g","PokeGeneric","Pokemon","padded_id","join","slice","pokeData","caught","owned","PokeStats","ball","nature","iv","dynamax","language","Region","region_ranges","galar","isle","tundra","start","region","end","console","log","Trainer","process","Party","Pokedex","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea55fc6a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport pokeData from './galar_dex.json';\n\nclass PokeCheckBox extends React.Component {\n  render () {\n    var checkbox;\n    var checked = this.props.value;\n    var type    = this.props.type;\n\n    if (checked) {\n      checkbox = <input type=\"checkbox\" className=\"nes-checkbox\" disabled=\"disabled\" checked=\"checked\"/>;\n    } else {\n      checkbox = <input type=\"checkbox\" className=\"nes-checkbox\" disabled=\"disabled\"/>;\n    }\n    \n    return (\n      <div className=\"col-xs poke_info\"><label>{ checkbox }<span>{ type }</span></label></div>\n    )\n  }\n}\n\nclass PokeID extends React.Component {\n  render () {\n    return <div className=\"col-xs pokemon_id\">{ this.props.id }</div>\n  }\n}\n\nclass PokeIcon extends React.Component {\n  render () {\n    var type = this.props.type;\n    var name = this.props.name;\n\n    if (name) {\n      if (type === \"pokemon\") {\n        return (\n          <div className=\"col-xs poke_icon\">\n              <img src={process.env.PUBLIC_URL + '/icons/pokemon/' + name + '.png'} alt={ name }/>\n          </div>\n        )\n      } else if (type === \"pokeball\") {\n        return (\n          <div className=\"col-xs poke_ball\">\n            <img src={process.env.PUBLIC_URL + '/icons/pokeballs/' + name.toLowerCase() + 'ball.png'} alt={ name }/>\n          </div>\n        )\n      }\n    } else {\n      return (<div className=\"col-xs\"></div>)\n    }\n  }\n}\n\nclass PokeTypes extends React.Component {\n  render () {\n    var types = Array.from(this.props.types);\n    return (\n      <div className=\"col-xs-2 poke_types\">\n        { types.map((type) => (\n          <img src={process.env.PUBLIC_URL + '/icons/types/' + type.toLowerCase() + '.gif'} alt={ type }/>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass PokeSelect extends React.Component {\n  render () {\n    var data     = this.props.data;\n    var select   = this.props.select;\n    {/*\n    var natures  = [\"Adamant\", \"Bashful\", \"Bold\", \"Brave\", \"Calm\", \"Careful\", \"Docile\", \"Gentle\", \"Hardy\", \"Hasty\", \"Impish\", \"Jolly\", \"Lax\", \n                    \"Lonely\", \"Mild\", \"Modest\", \"Naive\", \"Naughty\", \"Quiet\", \"Quirky\", \"Rash\", \"Relaxed\", \"Sassy\", \"Serious\", \"Timid\", \"None\"]\n    var regions  = [\"ENG\", \"CHS\", \"CHT\", \"SPA\", \"ITA\", \"GER\", \"FRE\", \"KOR\", \"None\"]\n    var genders  = [\"M\", \"F\", \"N/A\"]\n    var category = []\n    var elements = []\n\n    if (select === \"nature\") { \n      category = natures;\n    } else if (select === \"gender\") {\n      category = genders;\n    } else if (select === \"region\") {\n      category = regions;\n    }\n\n    category.forEach( function (option) {\n      if (option === data) { \n        elements.push(<option key={ option } selected=\"selected\">{ option }</option>)\n      } else { \n        elements.push(<option key={ option }>{ option }</option>) \n      }\n    });\n   \n    return ( \n      <select disabled=\"disabled\">\n        { elements }\n      </select> \n    )\n    */}\n    if (select === \"region\") {\n      if (data === \"ENG\") {\n        return (<div className=\"col-xs poke_info\">{ data }</div>)\n      }\n        return (<div className=\"col-xs poke_info\"><span class=\"nes-text is-primary\">{ data }</span></div>)\n    }\n    return (\n      <div className=\"col-xs poke_info\">{ data }</div>\n    )\n  }\n}\n\nclass PokeDynamax extends React.Component {\n  render() {\n    var level      = this.props.level;\n    var gigantamax = this.props.gigantamax;\n    var colourmap  = [\"#3CEEFF\",\"#6FE5FF\",\"#7BD3FF\",\"#5ABCFC\",\"#AD90FF\",\"#CD8EFE\",\"#F555FF\",\"#FC3CD1\",\"#FF20A3\",\"#FE1E86\",\"#DCDCDE\"];\n    var elements   = [];\n    for (var i=1; i<10; i++) {\n      if (i < level) {\n        var style = {\n          display: 'inline-block',\n          width: '7px',\n          height: '18px',\n          marginRight: '2px',\n          backgroundColor: colourmap[i-1]\n        };\n        elements.push(<div style={ style }></div>); \n      } else {\n        var style = {\n          display: 'inline-block',\n          width: '7px',\n          height: '18px',\n          marginRight: '2px',\n          backgroundColor: colourmap[10]\n        };\n        elements.push(<div style={ style }></div>); \n      }\n    }\n\n    var g = \"G\";\n    if (! gigantamax) {\n      g = \"\";\n    }\n\n    return (\n      <div className=\"col-xs poke_info\">\n        { elements } <span class=\"nes-text is-error\">{ g }</span>\n      </div>\n    )\n  }\n}\n\nclass PokeGeneric extends React.Component {\n  render () {\n    var data = this.props.data;\n    return (\n      <div className=\"col-xs poke_info\"> { data } </div>\n    )\n  }\n}\n\nclass Pokemon extends React.Component {\n  render() {\n    var id        = this.props.id;\n    var padded_id = (Array(3).join('0') + id).slice(-3);\n    var name      = pokeData[ padded_id ][\"Name\"];\n    var types     = pokeData[ padded_id ][\"Types\"];\n    var caught    = pokeData[ padded_id ][\"Caught\"];\n    var owned     = pokeData[ padded_id ][\"Owned\"];\n    return (\n      <div className=\"row nes-container is-rounded pokedex\">\n        <div className=\"col-xs-12\"><div className=\"row pokemon\">\n          <PokeID       id={ padded_id }                 />\n          <PokeIcon     name={ id }     type=\"pokemon\"   />\n          <PokeGeneric  data={ name }                    />\n          <PokeTypes    types={ types }                  />\n          <PokeCheckBox type=\"Caught\"   value={ caught } />\n          <PokeCheckBox type=\"Owned\"    value={ owned }  />\n        </div></div>\n        <PokeStats id={ padded_id }/>\n      </div>\n    )\n  }\n}\n\nclass PokeStats extends React.Component {\n  render () {\n    var id          = this.props.id;\n    var owned       = pokeData[ id ][\"Owned\"];\n    var ball        = pokeData[ id ][\"Ball\"];\n    var nature      = pokeData[ id ][\"Nature\"];\n    var iv          = pokeData[ id ][\"IVs\"];\n    var dynamax     = pokeData[ id ][\"Dynamax\"];\n    var gigantamax  = false;\n    var language    = pokeData[ id ][\"Region\"];\n    if (owned) {\n      return (\n        <div className=\"col-xs-12\"><div className=\"row pokemon\">\n          <PokeIcon     name={ ball }   type=\"pokeball\"              />\n          <PokeSelect   select=\"nature\" data={ nature }              />\n          <PokeGeneric  data={ \"IVs: \" + iv + \"/6\" }                 />\n          <PokeDynamax  level={ dynamax } gigantamax={ gigantamax }  />\n          <PokeGeneric  data={ \"HA: Y/N\" }                           />\n          <PokeSelect   select=\"region\" data={ language }            />\n        </div></div>\n      )\n    }\n    return (\n      <div className=\"col-xs-12\"><div className=\"row pokemon\">\n      </div></div>\n    )\n  }\n}\n\nclass Region extends React.Component {\n  render() {\n    var region_ranges = {galar: [1,400], isle: [401,600], tundra: [601,800]};\n    var elements = [];\n    var start = region_ranges[this.props.region][0];\n    var end   = region_ranges[this.props.region][1];\n    console.log({ pokeData });\n    for (var i=start; i<end+1; i++) {\n      elements.push(<Pokemon id={i}/>); \n    }\n\n    return (\n      <div className=\"col-xs-10 col-xs-offset-1\">\n        { elements }\n      </div>\n    )\n  }\n}\n\nclass Trainer extends React.Component {\n  render () {\n    var name = \"Reine\";\n    return (\n      <div id=\"trainer\" className=\"container\">\n        <div className=\"row nes-container with-title is-rounded\">\n          <p className=\"title\">{ name }</p>\n          <div className=\"col-xs-12\"><div className=\"row\">\n            <div className=\"col-xs-2 trainer\">\n              <img src={process.env.PUBLIC_URL + '/icons/trainers/' + name + '.png'} alt={ name }/>\n            </div>\n            <div className=\"col-xs-10\">\n              <div className=\"row\">\n                <div className=\"col-xs nes-container is-rounded\">nothing actually works yet</div>\n                <div className=\"col-xs nes-container is-rounded\">badges: 8</div>\n                <div className=\"col-xs nes-container is-rounded\">pokemon caught: 400</div>\n              </div>\n              <Party/>\n            </div>\n          </div></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Party extends React.Component {\n  render () {\n    var party = [9, 69, 209, 219, 81, 311];\n\n    return (\n      <div className=\"row\">\n        { party.map((id) => (\n          <div className=\"col-xs nes-container is-rounded pokemon\"><img src={process.env.PUBLIC_URL + '/icons/pokemon/' + id + '.png'}/></div>\n        ))}\n      </div>\n    );\n  }\n}\n\nclass Pokedex extends React.Component {\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"row center-xs header\">\n          <button className=\"nes-btn is-primary\">Galar (1-400)</button>\n          <button className=\"nes-btn is-disabled\">Isle of Armor (???)</button>\n          <button className=\"nes-btn is-disabled\">Crown Tundra (???)</button>\n        </div>\n        <Trainer/>\n        <div id=\"pokedex\" className=\"container\">\n          <div className=\"row nes-container with-title is-rounded\">\n            <p className=\"title\">Pokedex</p>\n            <Region region=\"galar\"/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Pokedex;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Pokedex from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Pokedex />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}